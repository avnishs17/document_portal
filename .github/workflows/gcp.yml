name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - "master"

env:
  GCP_PROJECT_ID: build-test-468516  # Your GCP project ID
  GCP_REGION: asia-south1
  GCP_ZONE: asia-south1-b
  SERVICE_NAME: document-portal
  REPOSITORY_NAME: document-portal
  IMAGE_NAME: document-portal

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Create Artifact Registry repository (if not exists)
      run: |
        gcloud artifacts repositories create ${{ env.REPOSITORY_NAME }} \
          --repository-format=docker \
          --location=${{ env.GCP_REGION }} \
          --description="Docker repository for Document Portal" || true

    - name: Build and push Docker image
      id: build
      run: |
        IMAGE_URI=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI
        echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image=${{ steps.build.outputs.image_uri }} \
          --platform=managed \
          --region=${{ env.GCP_REGION }} \
          --allow-unauthenticated \
          --port=8080 \
          --memory=8Gi \
          --cpu=4 \
          --min-instances=0 \
          --max-instances=10 \
          --set-env-vars="LANGCHAIN_PROJECT=DOCUMENT PORTAL" \
          --set-secrets="GROQ_API_KEY=GROQ_API_KEY:latest,HF_TOKEN=HF_TOKEN:latest,GOOGLE_API_KEY=GOOGLE_API_KEY:latest,LANGCHAIN_API_KEY=LANGCHAIN_API_KEY:latest"

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.GCP_REGION }} --format='value(status.url)')
        echo "Service deployed successfully!"
        echo "Service URL: $SERVICE_URL"
