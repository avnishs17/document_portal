apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-portal
  namespace: default
  labels:
    app: document-portal
spec:
  replicas: 2  # High availability
  selector:
    matchLabels:
      app: document-portal
  template:
    metadata:
      labels:
        app: document-portal
    spec:
      serviceAccountName: document-portal-ksa  # Workload Identity
      volumes:
      - name: app-storage
        emptyDir: {}  # Temporary storage for the pod
      containers:
      - name: document-portal
        image: us-central1-docker.pkg.dev/build-test-468516/document-portal/document-portal:latest
        ports:
        - containerPort: 8080
          protocol: TCP
        
        # Environment variables from secrets
        env:
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: groq-api-key
              key: api-key
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: google-api-key
              key: api-key
        # Optional: LangChain API key for LangSmith tracking (if secret exists)
        - name: LANGCHAIN_API_KEY
          valueFrom:
            secretKeyRef:
              name: langchain-api-key
              key: api-key
              optional: true
        
        # Application configuration
        - name: FAISS_BASE
          value: "faiss_index"
        - name: UPLOAD_BASE
          value: "data"
        - name: FAISS_INDEX_NAME
          value: "index"
        - name: DATA_STORAGE_PATH
          value: "/app/data"
        
        # Resource requests and limits (much more than Cloud Run allows)
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Volume mounts for persistent storage
        volumeMounts:
        - name: app-storage
          mountPath: /app/data
          subPath: data
        - name: app-storage
          mountPath: /app/faiss_index
          subPath: faiss_index
        - name: app-storage
          mountPath: /app/logs
          subPath: logs
        
        # Security context - matches Docker appuser
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000  # This should match the appuser UID
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: document-portal-service
  namespace: default
  labels:
    app: document-portal
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: document-portal

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: document-portal-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "document-portal-ip"
    kubernetes.io/ingress.class: "gce"
    cloud.google.com/load-balancer-type: "External"
  labels:
    app: document-portal
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: document-portal-service
            port:
              number: 80

# Uncomment this section when you have a custom domain and want HTTPS
# ---
# apiVersion: networking.gke.io/v1
# kind: ManagedCertificate
# metadata:
#   name: document-portal-ssl-cert
#   namespace: default
# spec:
#   domains:
#     - your-domain.com  # Replace with your actual domain

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: document-portal-ksa
  namespace: default
  annotations:
    iam.gke.io/gcp-service-account: document-portal-gke-sa@build-test-468516.iam.gserviceaccount.com
